package uuid

import (
	"fmt"
)

// ErrUUID is the base error type for errors generated by this package
type ErrUUID struct{}

func (e *ErrUUID) Error() string {
	return "uuid"
}

// ErrUUIDInvalidFormat is a specialized error that is returned when there is
// a problem parsing UUID data
type ErrUUIDInvalidFormat struct {
	err error
}

func (e *ErrUUIDInvalidFormat) Error() string {
	return e.err.Error()
}

func (e *ErrUUIDInvalidFormat) Unwrap() error {
	return e.err
}

func (e *ErrUUIDInvalidFormat) Is(target error) bool {
	_, ok := target.(*ErrUUIDInvalidFormat)
	return ok
}

func invalidFormat() error {
	return &ErrUUIDInvalidFormat{
		err: fmt.Errorf("%w: invalid UUID format", &ErrUUID{}),
	}
}

func invalidFormatf(format string, a ...any) error {
	formattedError := fmt.Errorf(format, a...)

	return &ErrUUIDInvalidFormat{
		err: fmt.Errorf("%w: %v", &ErrUUID{}, formattedError),
	}
}
